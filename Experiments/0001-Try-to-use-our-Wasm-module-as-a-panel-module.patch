From 21696c3a47142e0150148e2efff678f043c402df Mon Sep 17 00:00:00 2001
From: Tor Lillqvist <tml@iki.fi>
Date: Sun, 9 May 2021 17:31:02 +0300
Subject: [PATCH] Try to use our Wasm module as a panel module

Sadly I coulnd't get the SimConnect event plumbing to work. Will go
back to using it as a standalone module for now. Will have to look for
the AircraftLoaded system events, though, to make sure it doesn't get
used for the wrong aircraft. Or something.
---
 .../FlyingBrick/FlyingBrick/FlyingBrick.cpp   | 41 +++++++++++++++++--
 .../FlyingBrick/FlyingBrick.vcxproj           | 14 ++-----
 .../Airplanes/FlyingBrick/panel/panel.cfg     |  9 ++--
 3 files changed, 45 insertions(+), 19 deletions(-)

diff --git a/Modules/FlyingBrick/FlyingBrick/FlyingBrick.cpp b/Modules/FlyingBrick/FlyingBrick/FlyingBrick.cpp
index 0d8c75a..995a6b8 100755
--- a/Modules/FlyingBrick/FlyingBrick/FlyingBrick.cpp
+++ b/Modules/FlyingBrick/FlyingBrick/FlyingBrick.cpp
@@ -9,6 +9,7 @@
 #include <string>
 
 #include "MSFS/MSFS.h"
+#include "MSFS/MSFS_Render.h"
 #include "MSFS/MSFS_WindowsTypes.h"
 #include "SimConnect.h"
 
@@ -255,7 +256,7 @@ static std::string data_request_flags(int flags) {
     return result;
 }
 
-static void MSFS_CALLBACK FlyingBrickDispatchProc(SIMCONNECT_RECV *pData, DWORD cbData, void *pContext) {
+static void FlyingBrickDispatchProc(SIMCONNECT_RECV *pData, DWORD cbData, void *pContext) {
     if (failed)
         return;
 
@@ -595,7 +596,8 @@ static void MSFS_CALLBACK FlyingBrickDispatchProc(SIMCONNECT_RECV *pData, DWORD
     }
 }
 
-extern "C" MSFS_CALLBACK void module_init(void) {
+static void init() {
+
     HRESULT hr;
 
     if (hSimConnect == 0) {
@@ -713,10 +715,10 @@ extern "C" MSFS_CALLBACK void module_init(void) {
                                               SIMCONNECT_DATATYPE_FLOAT64,
                                               HALF));
     }
-    RECORD(SimConnect_CallDispatch(hSimConnect, FlyingBrickDispatchProc, NULL));
+    // RECORD(SimConnect_CallDispatch(hSimConnect, FlyingBrickDispatchProc, NULL));
 }
 
-extern "C" MSFS_CALLBACK void module_deinit(void) {
+static void deinit() {
     if (!hSimConnect)
         return;
 
@@ -725,3 +727,34 @@ extern "C" MSFS_CALLBACK void module_deinit(void) {
         return;
     }
 }
+
+extern "C" MSFS_CALLBACK bool FlightModel_gauge_callback(FsContext ctx, int service_id, void* pData) {
+
+    switch (service_id) {
+    case PANEL_SERVICE_PRE_INSTALL:
+        std::cout << "==== FlyingBrick PRE_INSTALL" << std::endl;
+        init();
+        break;
+
+    case PANEL_SERVICE_POST_INSTALL:
+        std::cout << "==== FlyingBrick POST_INSTALL" << std::endl;
+        break;
+
+    case PANEL_SERVICE_PRE_KILL:
+        std::cout << "==== FlyingBrick PRE_KILL" << std::endl;
+        deinit();
+        break;
+    case PANEL_SERVICE_PRE_UPDATE:
+        std::cout << "==== FlyingBrick PRE_UPDATE" << std::endl;
+        SIMCONNECT_RECV *pData;
+        DWORD cbData;
+        while (SUCCEEDED(SimConnect_GetNextDispatch(hSimConnect, &pData, &cbData))) {
+            if (pData->dwID == SIMCONNECT_RECV_ID_NULL)
+                break;
+            FlyingBrickDispatchProc(pData, cbData, nullptr);
+        }
+        break;
+    }
+
+    return true;
+}
diff --git a/Modules/FlyingBrick/FlyingBrick/FlyingBrick.vcxproj b/Modules/FlyingBrick/FlyingBrick/FlyingBrick.vcxproj
index 645aa93..698a506 100755
--- a/Modules/FlyingBrick/FlyingBrick/FlyingBrick.vcxproj
+++ b/Modules/FlyingBrick/FlyingBrick/FlyingBrick.vcxproj
@@ -47,12 +47,12 @@
     <GenerateManifest />
     <LinkIncremental />
     <IncludePath>$(MSFS_IncludePath)</IncludePath>
-    <OutDir>$(SolutionDir)..\..\Project\Packages\tangomikelima-aircraft-flying-brick\Modules\</OutDir>
+    <OutDir>$(SolutionDir)..\..\Project\PackageSources\SimObjects\Airplanes\FlyingBrick\panel\</OutDir>
   </PropertyGroup>
   <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|MSFS'">
     <TargetExt>.wasm</TargetExt>
     <IncludePath>$(MSFS_IncludePath)</IncludePath>
-    <OutDir>$(SolutionDir)..\..\Project\Packages\tangomikelima-aircraft-flying-brick\Modules\</OutDir>
+    <OutDir>$(SolutionDir)..\..\Project\PackageSources\SimObjects\Airplanes\FlyingBrick\panel\</OutDir>
   </PropertyGroup>
   <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|MSFS'">
     <ClCompile>
@@ -102,10 +102,7 @@
       </ProfileGuidedDatabase>
       <AdditionalLibraryDirectories>$(OutDir)</AdditionalLibraryDirectories>
     </Link>
-    <PostBuildEvent>
-      <Command>@echo on
-MSFSLayoutGenerator $(OutDirFullPath)..\layout.json</Command>
-    </PostBuildEvent>
+    <PostBuildEvent />
     <CustomBuildStep>
       <Command>
       </Command>
@@ -149,10 +146,7 @@ MSFSLayoutGenerator $(OutDirFullPath)..\layout.json</Command>
       </ProfileGuidedDatabase>
       <AdditionalLibraryDirectories>$(OutDir)</AdditionalLibraryDirectories>
     </Link>
-    <PostBuildEvent>
-      <Command>@echo on
-MSFSLayoutGenerator $(OutDirFullPath)..\layout.json</Command>
-    </PostBuildEvent>
+    <PostBuildEvent />
     <CustomBuildStep>
       <Command>
       </Command>
diff --git a/Project/PackageSources/SimObjects/Airplanes/FlyingBrick/panel/panel.cfg b/Project/PackageSources/SimObjects/Airplanes/FlyingBrick/panel/panel.cfg
index 74fc22b..ae10117 100644
--- a/Project/PackageSources/SimObjects/Airplanes/FlyingBrick/panel/panel.cfg
+++ b/Project/PackageSources/SimObjects/Airplanes/FlyingBrick/panel/panel.cfg
@@ -3,11 +3,9 @@
 [VCockpit01]
 size_mm = 1024,768
 pixel_size = 1024,768
-texture = $AS1000_PFD_1
-background_color = 42,42,40
-
-htmlgauge00 = NavSystems/AS1000/MFD/AS1000_MFD.html, 0,0,1024,768
-
+texture = $Screen_1
+background_color = 0, 0, 255
+htmlgauge00 = WasmInstrument/WasmInstrument.html?wasm_module=FlyingBrick.wasm&wasm_gauge=FlightModel, 0,0,1024,768
 [VCockpit02]
 size_mm = 1024,768
 pixel_size = 1024,768
@@ -39,3 +37,4 @@ VIEW_FORWARD_DIR = 2, 0, 0
 Day = 255,255,255
 Night = 255,255,255
 Luminous = 201,64,64
+
-- 
2.28.0

